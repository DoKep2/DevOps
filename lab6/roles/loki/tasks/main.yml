---
# tasks file for loki
- ansible.builtin.include_tasks: golang.yml
- ansible.builtin.include_tasks: install.yml

- name: loki | open port 3100
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 3100
    jump: ACCEPT
    state: present
    comment: "Allow Loki port"

- name: loki | save iptables
  ansible.builtin.command: "netfilter-persistent save"
  args:
    executable: /bin/bash

- name: loki | clone repo
  ansible.builtin.git:
    repo: "https://github.com/grafana/loki"
    dest: /usr/src/loki
    force: true
    update: yes

- name: loki | build
  ansible.builtin.command:
    cmd: "go build ./cmd/loki"
  args:
    chdir: /usr/src/loki/

- name: loki | move directory
  ansible.builtin.command:
    cmd: "mv loki /usr/local/bin/"
  args:
    chdir: /usr/src/loki/

- name: loki | create loki directory
  ansible.builtin.file:
    path: /etc/loki
    state: directory

- name: loki | move loki config
  ansible.builtin.command:
    cmd: "mv cmd/loki/loki-local-config.yaml /etc/loki/"
  args:
    chdir: /usr/src/loki/

- name: loki | change loki config
  ansible.builtin.replace:
    path: /etc/loki/loki-local-config.yaml
    regexp: '\/tmp\/wal'
    replace: '/opt/loki/wal'

- name: loki | change loki config
  ansible.builtin.replace:
    path: /etc/loki/loki-local-config.yaml
    regexp: '\/tmp\/loki'
    replace: '/opt/loki'

- name: loki | create loki directory
  ansible.builtin.file:
    path: /opt/loki
    state: directory

- name: loki | create loki user
  ansible.builtin.user:
    name: loki
    shell: /bin/false
    system: yes

- name: loki | change loki owner
  ansible.builtin.file:
    path: /opt/loki
    owner: loki
    group: loki
    recurse: yes

- name: loki | change loki owner
  ansible.builtin.file:
    path: /etc/loki
    owner: loki
    group: loki
    recurse: yes

- name: loki | change loki owner
  ansible.builtin.file:
    path: /usr/local/bin/loki
    owner: loki
    group: loki

- name: loki | create loki service
  ansible.builtin.template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
  notify: restart loki

- name: loki | reload systemd
  ansible.builtin.command:
    cmd: "systemctl daemon-reload"

- name: loki | start service
  ansible.builtin.service:
    name: loki
    state: started
    enabled: yes
